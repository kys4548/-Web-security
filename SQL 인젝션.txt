입력 데이터 검증방식

1) 허용 방식
사용자가 입력할 수 있는 문자를 정하고, 미리 정의된 문자가 입력되었을 때만 동작하도록 하는 방식
새로운 공격 기법이 나타날 때마다 새롭게 소스를 수정하는 번거로움이 있다.
2) 부정 방식
위험한 특수 문자로 분류된 패턴들을 등록하여 차단하는 것.
간단하게 구현 가능, 문제는 새로운 공격 유형이 나타나거나 개발자가 예상하지 못한 문자로 
공격하면 대처할 수 없어 새로운 공격 문자가 나올 때마다 계속 갱신해야 한다.

SQL인젝션
데이터베이스와 연동된 웹 어플리케이션의 입력값을 조작하여 DBMS가 의도하지 않은 결과를 반환하도록 하는 공격 기법.
DB정보 조회, 변조, 삭제 가능
사용자와 관리자에 대한 인증절차 우회, 데이터베이스 시스템 명령어 실행, 주요한 파일 시스템 정보 노출


-인증 우회
password : ' or ''=' 
	=> select uid,pwd from member ~~~~~~~~ and pwd ='' or ''='';

userid : admin';--
	=>select uid,pwd from member where id ='admin';--' ~~~~~  --뒤에 다 주석 처리 

-union을 이용한 데이터 조작
select 문을 조작하는 것은 인증 메커니즘이나 데이터베이스의 현재 테이블에서 값을 조작.
union은 동일테이블이나 다른 테이블의 필드에서의 데이터 조작 가능.


-insert를 이용한 데이터 조작
password : ';+insert+into+member+(uid,password)+values+('id','pass');--


<SQL인젝션에 많이 사용 되는 문자열>
' 		: %27
	초기 테스트 목적으로사용
	오류가 생성되면, 웹 어플리케이션은 SQL Injection에 취약하다.


% 			: %25
%%			: %2525
	와일드카드를 표현
	하나의 값과 반대로 다중 열을 삽입하기 위해 사용될 수 있다.


';-- 		: %27%20OR%27%27%2d%27
;--
	참값을 반환할 때 사용


Vuln)		: Vuln%29
	Oracle 기반 웹 애플리케이션에서 오류를 발생시키기 위해서 사용


+OR+1=1		: %29OR$201=%20
+OR+1%3d1	: %20OR%201%3d%20
	참값을 반환할 때 사용
	Query가 단일 인용구 구분자를 갖지 않을 때 사용

